version: 2.1

credentials: &credentials
  - Verena AWS Credentials
  - Bit Credentials

workflows:
  version: 2
  build:
    jobs:
      # dev site
      - deploy:
          # Examples:
          # bucket: 's3://dev-projectname'
          # distribution: 'E31RXXXXXXXXXX'
          bucket: 's3://dev-pharos-frontend-2'
          distribution: 'E29CT6PE5VEJB6'
          api: 'https://7qr5h405o5.execute-api.us-east-2.amazonaws.com/Prod/'
          mapping_api: 'https://2lqx57ebyj.execute-api.us-east-2.amazonaws.com/Prod/'
          client_id: '44vulabntl1hdi45vtvq0c7iop'
          user_pool_id: 'us-east-2_RR3m5a1fl'
          context: *credentials
          filters:
            branches:
              only:
                - dev
                - feature/pharos-2-deployment
      # review site
      - deploy:
          bucket: 's3://review-pharos-frontend-2'
          distribution: 'E3IAEIH8QM2RIN'
          api: 'https://wkyz2co3z4.execute-api.us-east-2.amazonaws.com/Prod'
          mapping_api: 'https://XXXXXXXXXXXXXXXXXXX.execute-api.us-east-2.amazonaws.com/Prod/'
          client_id: '3hcqevqa577mhqba9uhnphssct'
          user_pool_id: 'us-east-2_4bCcuIfOQ'
          context: *credentials
          filters:
            branches:
              only:
                - review
      # staging site
      - deploy:
          bucket: 's3://staging-pharos-frontend-2'
          distribution: 'E6PVRC1XI187A'
          api: 'https://qc9dj5pbn7.execute-api.us-east-2.amazonaws.com/Prod'
          mapping_api: 'https://XXXXXXXXXXXXXXXXXXX.execute-api.us-east-2.amazonaws.com/Prod/'
          client_id: 'o06ampns5let4mifsi2pn52el'
          user_pool_id: 'us-east-2_h1Xj2r9BX'
          context: *credentials
          filters:
            branches:
              only:
                - staging
      # prod site
      - deploy:
          bucket: 's3://prod-pharos-frontend-2'
          distribution: 'E61Z0UI7AL8G1'
          api: 'https://bzz55gu2jj.execute-api.us-east-2.amazonaws.com/Prod'
          mapping_api: 'https://XXXXXXXXXXXXXXXXXXX.execute-api.us-east-2.amazonaws.com/Prod/'
          client_id: '2kf7i84imfo743pcv79kpn67qh'
          user_pool_id: 'us-east-2_mwSBSPXdc'
          context: *credentials
          filters:
            branches:
              only:
                - prod

orbs:
  aws-cli: circleci/aws-cli@2.0.3

jobs:
  deploy:
    working_directory: ~/repo

    docker:
      - image: cimg/node:lts

    # resource_class: xlarge

    parameters:
      bucket:
        type: string
      distribution:
        type: string
      api:
        type: string
      mapping_api:
        type: string
      client_id:
        type: string
      user_pool_id:
        type: string

    steps:
      - checkout
      - aws-cli/install

      - run:
          name: Adding bit.dev to NPM Registry
          command: |
            echo "always-auth=true" >> ~/.npmrc;
            echo "@talus-analytics:registry=https://node.bit.dev" >> ~/.npmrc;
            echo "@teambit:registry=https://node.bit.dev" >> ~/.npmrc;
            echo "//node.bit.dev/:_authToken={$BIT_TOKEN}" >> ~/.npmrc;

      - restore_cache:
          keys:
            - yarn-deps-{{ checksum "yarn.lock" }}
            - yarn-deps-

      - run:
          name: Yarn Install
          command: yarn install --network-timeout 1000000

      - run:
          name: Typescript Checks
          command: yarn tsc

      - run:
          name: Run tests
          command: yarn run test

      - run:
          name: Gatsby build
          command: |
            yarn build \
            --api <<parameters.api>> \
            --mapping_api <<parameters.mapping_api>> \
            --user_pool_id <<parameters.user_pool_id>> \
            --client_id <<parameters.client_id>>

      - run:
          name: AWS S3 Sync to <<parameters.bucket>>
          command: aws s3 sync public/ <<parameters.bucket>> --delete

      - run:
          name: Run cloudfront invalidation
          command: |
            aws cloudfront create-invalidation \
            --distribution-id <<parameters.distribution>> \
            --paths "/*"

      - save_cache:
          key: yarn-deps-{{ checksum "yarn.lock" }}
          paths:
            - 'node_modules'
            - '.cache'
            - 'public'
